variant: flatcar
version: 1.0.0

systemd:
  units:
    - name: wireguard-peer-manager.timer
      enabled: true

storage:
  files:
    # WireGuard netdev configuration
    - path: /etc/systemd/network/10-wg0.netdev
      mode: 0640
      group:
        name: systemd-network
      contents:
        inline: |-
          [NetDev]
          Name=wg0
          Kind=wireguard
          Description=WireGuard

          [WireGuard]
          PrivateKey=${wgPrivateKey}
          ListenPort=51820

          # PEERS_START

    # WireGuard network configuration
    - path: /etc/systemd/network/10-wg0.network
      mode: 0640
      group:
        name: systemd-network
      contents:
        inline: |-
          [Match]
          Name=wg0

          [Network]
          Address=${wgIpAddress}/24
          IPForward=yes
          IPMasquerade=yes

    # Enable IP forwarding
    - path: /etc/sysctl.d/99-wireguard.conf
      mode: 0644
      contents:
        inline: |-
          net.ipv4.ip_forward = 1

    # WireGuard peer manager script
    - path: /usr/local/bin/wireguard-peer-manager.sh
      mode: 0755
      contents:
        inline: |-
          #!/bin/bash

          set -euo pipefail

          # Use Key Vault name passed as parameter
          KEYVAULT_NAME="${keyVaultName}"

          WG_CONFIG="/etc/systemd/network/50-wg0.netdev"

          echo "Checking for WireGuard peer updates"

          # Get current file hash
          current_hash=$(sha256sum "$WG_CONFIG" | cut -d' ' -f1)

          # Remove everything after PEERS_START marker (keep the marker)
          sed -i '/# PEERS_START/,$d; $a# PEERS_START' "$WG_CONFIG"

          # List all secrets and add peers directly to the file
          peer_secrets=$(az keyvault secret list --vault-name "$KEYVAULT_NAME" --query "[?starts_with(name, 'wg-peer-')].name" -o tsv 2>/dev/null)

          for secret_name in $(echo "$peer_secrets" | sort -V); do
            peer_value=$(az keyvault secret show --vault-name "$KEYVAULT_NAME" --name "$secret_name" --query "value" -o tsv 2>/dev/null)
            echo -e "\n[WireGuardPeer]\n$peer_value\n" >> "$WG_CONFIG"
          done

          # Check if file actually changed
          if [[ "$(sha256sum "$WG_CONFIG" | cut -d' ' -f1)" == "$current_hash" ]]; then
            echo "No peer changes detected."
            exit 0
          fi

          echo "Peer changes detected, WireGuard configuration updated."

          # Reconfigure WireGuard interface to apply changes
          networkctl reconfigure wg0

          echo "WireGuard configuration updated successfully."

    # Systemd service for WireGuard peer manager
    - path: /etc/systemd/system/wireguard-peer-manager.service
      mode: 0644
      contents:
        inline: |-
          [Unit]
          Description=WireGuard Peer Manager
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=oneshot
          User=root
          ExecStart=/usr/local/bin/wireguard-peer-manager.sh

    # Timer for WireGuard peer manager (runs every 5 minutes)
    - path: /etc/systemd/system/wireguard-peer-manager.timer
      mode: 0644
      contents:
        inline: |-
          [Unit]
          Description=Run WireGuard Peer Manager every 5 minutes
          Requires=wireguard-peer-manager.service

          [Timer]
          OnBootSec=1min
          OnUnitActiveSec=5min
          AccuracySec=30s

          [Install]
          WantedBy=timers.target
